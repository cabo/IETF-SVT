<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.14 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC5280 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY RFC5652 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml">
<!ENTITY RFC6931 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6931.xml">
<!ENTITY RFC7515 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml">
<!ENTITY RFC7518 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7518.xml">
<!ENTITY RFC7519 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-santesson-svt-01" category="std" consensus="true">

  <front>
    <title>Signature Validation Token</title>

    <author initials="S." surname="Santesson" fullname="Stefan Santesson">
      <organization abbrev="IDsec Solutions">IDsec Solutions AB</organization>
      <address>
        <postal>
          <street>Forskningsbyn Ideon</street>
          <city>Lund</city>
          <code>223 70</code>
          <country>SE</country>
        </postal>
        <email>sts@aaa-sec.com</email>
      </address>
    </author>
    <author initials="R." surname="Housley" fullname="Russ Housley">
      <organization abbrev="Vigil Security">Vigil Security, LLC</organization>
      <address>
        <postal>
          <street>516 Dranesville Road</street>
          <city>Herndon, VA</city>
          <code>20170</code>
          <country>US</country>
        </postal>
        <email>housley@vigilsec.com</email>
      </address>
    </author>

    <date year="2021" month="May" day="20"/>

    <area>Security</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>Electronic signatures have a limited lifespan with respect to the time period that they
can be validated and determined to be authentic. The Signature Validation Token (SVT)
defined in this specification provides evidence that asserts the validity of an
electronic signature. The SVT is provided by a trusted authority, which asserts that
a particular signature was successfully validated according to defined procedures at
a certain time. Any future validation of that electronic signature can be satisfied by
validating the SVT without any need to also validate the original electronic signature or
the associated digital certificates. SVT supports electronic signatures in CMS, XML, and
PDF documents.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">

<t>Electronic signatures have a limited lifespan regarding when they can be validated
and determined to be authentic. Many factors make it more difficult to validate
electronic signatures over time. For example:</t>

<t><list style="symbols">
  <t>Trusted information about the validity of the certificate containing the signer’s public key is not available.</t>
  <t>Trusted information about the date and time when the signature was actually created is not available.</t>
  <t>Algorithms used to create the electronic signature are no longer considered secure.</t>
  <t>Services necessary to validate the signature are no longer available.</t>
  <t>Supporting evidence such as CA certificates, OCSP responses, CRLs, or timestamps.</t>
</list></t>

<t>The challenges to validation of an electronic signature increases over time, and
eventually it is simply impossible to verify the signature with a sufficient level of
assurance.</t>

<t>Existing standards, such as the ETSI XAdES <xref target="XADES"/> profile for XML
signatures <xref target="XMLDSIG11"/>, ETSI PAdES <xref target="PADES"/> profile for PDF signatures
<xref target="ISOPDF2"/>, and ETSI CAdES <xref target="CADES"/> profile for CMS signatures
<xref target="RFC5652"/> can be used to prolong the lifetime of a signature by
storing data that supports validation of the electronic signature beyond
the lifetime of the certificate containing the signer’s public key, which
is often referred to as the signing certificate.  The problem with this
approach is that the amount of information that must be stored along with
the electronic signature constantly grows over time.  The increasing
amount of information and signed objects that need to be validated in
order to verify the original electronic signature grows in complexity to
the point where validation of the electronic signature may become
infeasible.</t>

<t>The Signature Validation Token (SVT) defined in this specification takes a fundamentally
different approach to the problem by providing evidence by a trusted authority that
asserts the validity of an electronic signature. The SVT asserts that a particular
electronic signature was successfully validated  by a trusted authority according to
defined procedures at a certain date and time. Once the SVT is issued by a trusted
authority, any future validation of that electronic signature is satisfied by validating
the SVT, without any need to also validate the original electronic signature.</t>

<t>This approach drastically reduces the complexity of validation of older electronic
signatures for the simple reason that validating the SVT eliminates the need to
validate the many signed objects that would otherwise been needed to provide the
same level of assurance. The SVT can be signed with private keys and algorithms that
provide confidence for a considerable time period. In fact, multiple SVTs can be used
to offer greater assurance. For example, one SVT could be produced with a large RSA
private key, a second one with a strong elliptic curve, and a third one with a quantum
safe digital signature algorithm to protect against advances in computing power and
cryptanalytic capabilities. Further, the trusted authority can add additional SVTs
in the future using fresh private keys and signatures to extend the lifetime of the,
if necessary.</t>

</section>
<section anchor="defs" title="Definitions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This document use the following terms:</t>

<t><list style="symbols">
  <t>Signed Data – The data covered by a particular electronic signature. This is typically
equivalent to the signed content of a document, and it represents the data that the
signer intended to sign. In some cases, such as in some XML signatures, the signed data
can be the collection of several data fragments each referenced by the signature. In the
case of PDF, this is the data covered by the “ByteRange” parameter in the signature
dictionary.</t>
  <t>Signed Bytes – These are the actual bytes of data that were hashed and signed by the
digital signature algorithm. In most cases, this is not the actual Signed Data, but a
collection of signature metadata that includes references (hash) of the Signed Data as
well as information about algorithms and other data bound to a signature. In XML, this
is the canonicalized SignedInfo element. In CMS and PDF signatures, this is the
DER-encoded SignedAttributes structure.</t>
</list></t>

<t>When these terms are used as defined in this section, they appear with a
capitalized first letter.</t>

</section>
<section anchor="svt" title="Signature Validation Token">

<t>The Signature Validation Token (SVT) is created by a trusted service to capture
evidence of successful electronic signature verification, and then relying
parties can depend on the checking that has already taken place by the
trusted service.</t>

<section anchor="svt-function" title="Signature Validation Token Function">

<t>The function of the SVT is to capture evidence of electronic signature
validity at one instance of secure signature validation process and to
use that evidence to eliminate the need to perform any repeated
cryptographic validation of the original electronic signature value, as
well as reliance on any hash values bound to that signature.  The SVT
achieves this by binding the following information to a specific
electronic signature:</t>

<t><list style="symbols">
  <t>A unique identification of the electronic signature.</t>
  <t>The data and metadata signed by the electronic signature.</t>
  <t>The signer’s certificate that was validated as part of electronic signature verification.</t>
  <t>The certification path that was used to validate the signer’s certificate.</t>
  <t>An assertion providing evidence of that the signature was verified, the date and time the verification was performed, the procedures used to verify the electronic signature, and the outcome of the verification.</t>
  <t>An assertion providing evidence of the date and time at which the signature is known to have existed, the procedures used to validate the date and time of existence, and the outcome of the validation.</t>
</list></t>

<t>Using an SVT is equivalent to validating a signed document in a system once, and then
using that document multiple times without subsequent revalidating the electronic
signature for each usage. Such procedures are common in systems where the document is
residing in a safe and trusted environment where it is protected against modification. The
SVT allows the safe and trusted environment to expand beyond a locally controlled
environment, and the SVT allows a greater period between original electronic signature
verification and subsequent usage.</t>

<t>Using the SVT, the electronic signature verification of a document can be take place
once using a reliable trusted service, and then any relying party that is able to
depend on the verification process already performed by the trusted service. The SVT
is therefore not only a valuable tool to extend the lifetime of a signed document, but
also avoids the need for careful integration between electronic signature verification
and document usage.</t>

</section>
<section anchor="svt-syntax" title="Signature Validation Token Syntax">

<t>The SVT is carried in a JSON Web Token (JWT) as defined in <xref target="RFC7519"/>.</t>

<section anchor="svt-syntax-dt" title="Data Types">

<t>The contents of claims in an SVT are specified using the following data types:</t>

<t><list style="symbols">
  <t>String – JSON Data Type of string that contains an arbitrary case sensitive string value.</t>
  <t>Base64Binary – JSON Data Type of string that contains of Base64 encoded byte array of binary data.</t>
  <t>StringOrURI – JSON Data Type of string that contains an arbitrary string or an URI as defined in <xref target="RFC7519"/>, which REQUIRES a value containing the colon character (“:”) to be a URI.</t>
  <t>URI – JSON Data Type of string that contains an URI as defined in <xref target="RFC7519"/>.</t>
  <t>Integer – JSON Data Type of number that contains a 32-bit signed integer value (from -2^31 to 2^31-1).</t>
  <t>Long – JSON Data Type of number that contains a 64-bit signed integer value (from -2^63 to 2^63-1).</t>
  <t>NumericDate – JSON Data Type of number that contains a data as defined in <xref target="RFC7519"/>, which is the number of seconds from 1970-01-01T00:00:00Z UTC until the specified UTC date/time, ignoring leap seconds.</t>
  <t>Boolean – JSON Data Type of boolean that contains explicit value of true or false.</t>
  <t>Object&lt;Class&gt; – A JSON object holding a claims object of a class defined in this specification (see <xref target="svt-syntax-claim"/>).</t>
  <t>Map&lt;Type&gt; – A JSON object with name-value pairs where the value is an object of the specified Type in the notation. For example, Map&lt;String&gt; is a JSON object with name value pairs where all values are of type String.</t>
  <t>Array – A JSON array of a specific data type as defined in this section. An array is expressed in this specification by square brackets. For example, [String] indicates an array of String values, and [Object&lt;DocHash&gt;] indicates an array of DocHash objects.</t>
  <t>Null – A JSON null that represents an absent value. A claim with a null value is equivalent with an absent claim.</t>
</list></t>

</section>
<section anchor="svt-syntax-claim" title="Signature Validation Token JWT Claims">

<t>The SVT MUST contain only JWT claims in the following list:</t>

<t><list style="symbols">
  <t>jti – A String data type that is a “JWT ID” registered claim according to <xref target="RFC7519"/>. It is RECOMMENDED that the identifier holds a hexadecimal string representation of a 128-bit unsigned integer. A SVT MUST contain one “JWT ID” claim.</t>
  <t>iss  – A StringOrURI data type that is an “Issuer” registered claim according to <xref target="RFC7519"/>, which is an arbitrary unique identifier of the SVT issuer. This value SHOULD have the value of an URI based on a domain owned by the issuer. A SVT MUST contain one “Issuer” claim.</t>
  <t>iat – A NumericDate data type that is an “Issued At” registered claim according to <xref target="RFC7519"/>, which expresses the date and time when this SVT was issued. A SVT MUST contain one “Issued At” claim.</t>
  <t>aud – A [StringOrURI] data type or a StringOrURI data type that is an “Audience” registered claim according to <xref target="RFC7519"/>. The audience claim is an array of one or more identifiers, identifying intended recipients of the SVT. Each identifier MAY identify a single entity, a group of entities or a common policy adopted by a group of entities. If only one value is provided it MAY be provided as a single StringOrURI data type value instead of as an array of values. Inclusion of the “Audience” claim in a SVT is OPTIONAL.</t>
  <t>exp – A NumericDate data type that is an “Expiration Time” registered claim according to <xref target="RFC7519"/>, which expresses the date and time when services and responsibilities related to this SVT is no longer provided by the SVT issuer. The precise meaning of the expiration time claim is defined by local policies. See implementation note below. Inclusion of the “Expiration Time” claim in a SVT is OPTIONAL.</t>
  <t>sig_val_claims – A Object&lt;SigValidation&gt; data type that contains signature validation claims for this SVT extending the standard registered JTW claims above. A SVT MUST contain one sig_val_claims claim.</t>
</list></t>

<t>Note: An SVT asserts that a particular validation process was undertaken at a stated
date and time. This fact never changes and never expires. However, some other aspects
of the SVT such as liability for false claims or service provision related to a specific
SVT may expire after a certain period of time, such as a service where an old SVT can be
upgraded to a new SVT signed with fresh keys and algorithms.</t>

</section>
<section anchor="sigvalidation-obj-class" title="SigValidation Object Class">

<t>The sig_val_claims JWT claim uses the SigValidation object class. A SigValidation object
holds all custom claims, and a SigValidation object contains the following parameters:</t>

<t><list style="symbols">
  <t>ver – A String data type representing the version. This parameter MUST be present, and the version in this specification indicated by the value “1.0”.</t>
  <t>profile – A StringOrURI data type representing the name of a profile that defines conventions followed for specific claims and any extension points used by the SVT issuer. Inclusion of this parameter is OPTIONAL.</t>
  <t>hash_algo – A URI data type that identifies the hash algorithm used to compute the hash values within the SVT. The URI identifier MUST be one defined in <xref target="RFC6931"/> or in the IANA registry defined by this specification. This parameter MUST be present.</t>
  <t>sig – A [Object&lt;Signature&gt;] data type that gives information about validated electronic signatures as an array of Signature objects. If the SVT contains signature validation evidence for more than one signature, then each signature is represented by a separate Signature object. At least one Signature object MUST be present.</t>
  <t>ext – A Map&lt;String&gt; data type that provides additional claims related to the SVT. Extension claims are added at the discretion of the SVT issuer; however, extension claims MUST follow any conventions defined in a profile of this specification (see <xref target="profiles"/>). Inclusion of this parameter is OPTIONAL.</t>
</list></t>

</section>
<section anchor="signature-obj-class" title="Signature Claims Object Class">

<t>The sig parameter in the SigValidation object class uses the Signature object
class. The Signature object contains claims related to signature validation
evidence for one signature, and it contains the following parameters:</t>

<t><list style="symbols">
  <t>sig_ref – A Object&lt;SigReference&gt; data type that contains reference information identifying the target signature. This parameter MUST be present.</t>
  <t>sig_data – A [Object&lt;SignedData&gt;] data type that contains an array of references to Signed Data that was signed by the target electronic signature.  This parameter MUST be present.</t>
  <t>signer_cert_ref – A Object&lt;CertReference&gt; data type that references the signer’s certificate and optionally reference to a supporting certification path that was used to verify the target electronic signature. This parameter MUST be present.</t>
  <t>sig_val – A [Object&lt;PolicyValidation&gt;] data type that contains an array of results of signature verification according to defined procedures. This parameter MUST be present.</t>
  <t>time_val – A [Object&lt;TimeValidation&gt;] data type that contains an array of time verification results that the target signature has existed at a specific date and time in the past. Inclusion of this parameter is OPTIONAL.</t>
  <t>ext – A MAP&lt;String&gt; data type that provides additional claims related to the target signature. Extension claims are added at the discretion of the SVT Issuer; however, extension claims MUST follow any conventions defined in a profile of this specification (see <xref target="profiles"/>). Inclusion of this parameter is OPTIONAL.</t>
</list></t>

</section>
<section anchor="sigreference-obj-class" title="SigReference Claims Object Class">

<t>The sig_ref parameter in the Signature object class uses the SigReference object
class. The SigReference object provides information used to match the Signature
claims object to a specific target electronic signature and to verify the integrity
of the target signature value and Signed Bytes, and it contains the following parameters:</t>

<t><list style="symbols">
  <t>id – A String data type that contains an identifier assigned to the target signature. Inclusion of this parameter is OPTIONAL.</t>
  <t>sig_hash – A Base64Binary data type that contains a hash value of the target electronic signature value. This parameter MUST be present.</t>
  <t>sb_hash – A Base64Binary data type that contains a hash value of the Signed Bytes of the target electronic signature. This parameter MUST be present.</t>
</list></t>

</section>
<section anchor="signeddata-obj-class" title="SignedData Claims Object Class">

<t>The sig_data parameter in the Signature object class uses the SignedData object
class. The SignedData object provides information used to verify the target electronic
signature references to Signed Data as well as to verify the integrity of all data that
is signed by the target signature, and it contains the following parameters:</t>

<t><list style="symbols">
  <t>ref – A String data type that contains a reference identifier for the data or data fragment covered by the target electronic signature. This parameter MUST be present.</t>
  <t>hash – A Base64Binary data type that contains the hash value for the data covered by the target electronic signature. This parameter MUST be present.</t>
</list></t>

</section>
<section anchor="policyval-obj-class" title="PolicyValidation Claims Object Class">

<t>The sig_val parameter in the Signature object class uses the PolicyValidation object
class. The PolicyValidation object provides information about the result of a validation
process according to a spefific policy, and it contains the following parameters:</t>

<t><list style="symbols">
  <t>pol – A StringOrURI data type that contains the identifier of the policy governing the electronic signature verification process. This parameter MUST be present.</t>
  <t>res – A String data type that contains the result of the electronic signature verification process. The value MUST be one of “PASSED”, “FAILED” or “INDETERMINATE” as defined by <xref target="ETSI319102-1"/>. This parameter MUST be present.</t>
  <t>msg – A String data type that contains a message describing the result. Inclusion of this parameter is OPTIONAL.</t>
  <t>ext – A MAP&lt;String&gt; data type that provides additional claims related to the target signature. Extension claims are added at the discretion of the SVT Issuer; however, extension claims MUST follow any conventions defined in a profile of this specification (see <xref target="profiles"/>). Inclusion of this parameter is OPTIONAL.</t>
</list></t>

</section>
<section anchor="timever-obj-class" title="TimeValidation Claims Object Class">

<t>The time_val parameter in the Signature object class uses the TimeValidation object
class. The TimeValidation claims object provides information about the result of
validating time evidence asserting that the target signature existed at a particular
date and time in the past, and it contains the following parameters:</t>

<t><list style="symbols">
  <t>time – A NumericDate data type that contains the verified time. This parameter MUST be present.</t>
  <t>type – A StringOrURI data type that contains an identifier of the type of evidence of time. This parameter MUST be present.</t>
  <t>iss – A StringOrURI data type that contains an identifier of the entity that issued the evidence of time. This parameter MUST be present.</t>
  <t>id – A String data type that contains an unique identifier assigned to the evidence of time.  Inclusion of this parameter is OPTIONAL.</t>
  <t>val – A [Object&lt;PolicyValidation&gt;] data type that contains an array of results of the time evidence validation according to defined validation procedures. Inclusion of this parameter is OPTIONAL.</t>
  <t>ext – A MAP&lt;String&gt; data type that provides additional claims related to the target signature. Extension claims are added at the discretion of the SVT Issuer; however, extension claims MUST follow any conventions defined in a profile of this specification (see <xref target="profiles"/>). Inclusion of this parameter is OPTIONAL.</t>
</list></t>

</section>
<section anchor="certref-obj-class" title="CertReference Claims Object Class">

<t>The signer_cert_ref parameter in the Signature object class uses the CertReference object
class. The CertReference object references a single X.509 certificate or a X.509
certification path, either by providing the certificate data or by providing hash
references for certificates that can be located in the target electronic signature, and
it contains the following parameters:</t>

<t><list style="symbols">
  <t>type – A StringOrURI data type that contains an identifier of the type of reference. The type identifier MUST be one of the identifiers defined below, an identifier specified by the selected profile, or a URI identifier. This parameter MUST be present.</t>
  <t>ref – A [String] data type that contains an array of string parameters according to conventions defined by the type identifier. This parameter MUST be present.</t>
</list></t>

<t>The following type identifiers are defined:</t>

<t><list style="symbols">
  <t>“chain” – The ref contains an array of Base64 encoded X.509 certificates <xref target="RFC5280"/>. The certificates MUST be provided in the order starting with the end entity certificate. Any following certificate must be able to validate the signature on the previous certificate in the array.</t>
  <t>chain_hash – The ref contains an array of one or more Base64 encoded hash values where each hash value is a hash over a X.509 certificate <xref target="RFC5280"/> used to validate the signature.  The certificates MUST be provided in the order starting with the end entity certificate.  Any following certificate must be able to validate the signature on the previous certificate in the array. This option MUST NOT be used unless all hashed certificates are present in the target electronic signature.</t>
</list></t>

<t>Note: All certificates referenced using the identifiers above are X.509 certificates.
Profiles of this specification MAY define alternative types of public key containers;
however, a major function of these referenced certificates is not just to reference
the public key, but also to provide the subject name of the signer. It is therefore
important for the full function of an SVT that the referenced public key container also
provides the means to identify of the signer.</t>

</section>
<section anchor="svt-jose-header" title="SVT JOSE Header">

<t>The SVT JWT MUST contain the following JOSE header parameters in accordance with
Section 5 of <xref target="RFC7519"/>:</t>

<t><list style="symbols">
  <t>typ – This parameter MUST have the string value “JWT” (upper case).</t>
  <t>alg – This parameter identifies the algorithm used to sign the SVT JWT. The algorithm identifier MUST be specified in <xref target="RFC7518"/> or the IANA JSON Web Signature and Encryption Algorithms Registry [ add a ref ]. The specified signature hash algorithm MUST be identical to the hash algorithm specified in the hash_algo parameter of the SigValidation object within the sig_val_claims claim.</t>
</list></t>

<t>The SVT header MUST contain a public key or a reference to a public key used to verify the signature on the SVT in accordance with <xref target="RFC7515"/>. Each profile, as discussed in <xref target="profiles"/>, MUST define the requirements for how the key or key reference is included in the header.</t>

</section>
</section>
</section>
<section anchor="profiles" title="Profiles">

<t>Each signed document and signature type will have to define the precise content and
use of several claims in the SVT.</t>

<t>Each profile MUST as a minimum define:</t>

<t><list style="symbols">
  <t>How to reference the Signed Data content of the signed document.</t>
  <t>How to reference to the target electronic signature and the Signed Bytes of the signature.</t>
  <t>How to reference certificates supporting each electronic siganture.</t>
  <t>How to include public keys or references to public keys in the SVT.</t>
  <t>Whether each electronic signature is supported by a single SVT, or whether one SVT may support multiple electronic signatures of the same document.</t>
</list></t>

<t>A profile MAY also define:</t>

<t><list style="symbols">
  <t>Explicit information on how to perform signature validation based on an SVT.</t>
  <t>How to attach an SVT to an electronic signature or signed document.</t>
</list></t>

</section>
<section anchor="signature-verification-with-a-svt" title="Signature Verification with a SVT">

<t>Signature verification based on an a SVT MUST follow these steps:</t>

<t><list style="numbers">
  <t>Locate all available SVTs available for the signed document that are relevant for the target electronic signature.</t>
  <t>Select the most recent SVT that can be successfully validated and meets the requirement of the relying party.</t>
  <t>Verify the integrity of the signature and the Signed Bytes of the target electronic signature using the sig_ref claim.</t>
  <t>Verify that the Signed Data reference in the original electronic signature matches the reference values in the sig_data_ref claim.</t>
  <t>Verify the integrity of referenced Signed Data using provided hash values in the sig_data_ref claim.</t>
  <t>Obtain the verified certificates supporting the asserted electronic signature verification through the signer_cert_ref claim.</t>
  <t>Verify that signature validation policy results satisfy the requirements of the relying party.</t>
  <t>Verify that verified time results satisfy the context for the use of the signed document.</t>
</list></t>

<t>After successfully performing these steps, signature validity is established as well as
the trusted signer certificate binding the identity of the signer to the electronic
signature.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<t>{ To be written }</t>

</section>
<section anchor="seccons" title="Security Considerations">

<t>{ To be written }</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC8174;
&RFC5280;
&RFC5652;
&RFC6931;
&RFC7515;
&RFC7518;
&RFC7519;
<reference anchor="ETSI319102-1" >
  <front>
    <title>ETSI - Electronic Signatures and Infrastructures (ESI); Procedures for Creation and Validation of AdES Digital Signatures; Part 1: Creation and Validation</title>
    <author >
      <organization>ETSI</organization>
    </author>
    <date year="2016" month="May"/>
  </front>
  <seriesInfo name="ETSI" value="EN 319 102-1 v1.1.1"/>
</reference>
<reference anchor="XMLDSIG11" >
  <front>
    <title>XML Signature Syntax and Processing Version 1.1</title>
    <author initials="D." surname="Eastlake" fullname="Donald Eastlake">
      <organization></organization>
    </author>
    <author initials="J." surname="Reagle" fullname="Joseph Reagle">
      <organization></organization>
    </author>
    <author initials="D." surname="Solo" fullname="David Solo">
      <organization></organization>
    </author>
    <author initials="F." surname="Hirsch" fullname="Frederick Hirsch">
      <organization></organization>
    </author>
    <author initials="M." surname="Nystrom" fullname="Magnus Nystrom">
      <organization></organization>
    </author>
    <author initials="T." surname="Roessler" fullname="Thomas Roessler">
      <organization></organization>
    </author>
    <author initials="K." surname="Yiu" fullname="Kelvin Yiu">
      <organization></organization>
    </author>
    <date year="2013" month="April" day="11"/>
  </front>
  <seriesInfo name="W3C" value="Proposed Recommendation"/>
</reference>
<reference anchor="ISOPDF2" >
  <front>
    <title>Document management -- Portable document format -- Part 2: PDF 2.0</title>
    <author >
      <organization>ISO</organization>
    </author>
    <date year="2017" month="July"/>
  </front>
  <seriesInfo name="ISO" value="32000-2"/>
</reference>
<reference anchor="XADES" >
  <front>
    <title>Electronic Signatures and Infrastructures (ESI); XAdES digital signatures; Part 1: Building blocks and XAdES baseline signatures</title>
    <author >
      <organization>ETSI</organization>
    </author>
    <date year="2016" month="April"/>
  </front>
  <seriesInfo name="ETSI" value="EN 319 132-1 v1.1.1"/>
</reference>
<reference anchor="PADES" >
  <front>
    <title>Electronic Signatures and Infrastructures (ESI); PAdES digital signatures; Part 1: Building blocks and PAdES baseline signatures</title>
    <author >
      <organization>ETSI</organization>
    </author>
    <date year="2016" month="April"/>
  </front>
  <seriesInfo name="ETSI" value="EN 319 142-1 v1.1.1"/>
</reference>
<reference anchor="CADES" >
  <front>
    <title>Electronic Signatures and Infrastructures (ESI); CAdES digital signatures; Part 1: Building blocks and CAdES baseline signatures</title>
    <author >
      <organization>ETSI</organization>
    </author>
    <date year="2016" month="April"/>
  </front>
  <seriesInfo name="ETSI" value="EN 319 122-1 v1.1.1"/>
</reference>


    </references>



<section anchor="appendix-examples" title="Appendix: Examples">

<t>The following example illustrates a basic SVT according to this specification
issued for a signed PDF document.</t>

<t>Note: Line breaks in the decoded example are inserted for readablilty. Line
breaks are not allowed in valid JSON data.</t>

<t>Signature validation token JWT:</t>

<figure><artwork><![CDATA[
eyJraWQiOiJPZW5JKzQzNEpoYnZmRG50ZlZcLzhyT3hHN0ZrdnlqYUtWSmFWcUlG
QlhvaFZoQWU1Zks4YW5vdjFTNjg4cjdLYmFsK2Z2cGFIMWo4aWJnNTJRQnkxUFE9
PSIsInR5cCI6IkpXVCIsImFsZyI6IlJTNTEyIn0.eyJhdWQiOiJodHRwOlwvXC9l
eGFtcGxlLmNvbVwvYXVkaWVuY2UxIiwiaXNzIjoiaHR0cHM6XC9cL3N3ZWRlbmNv
bm5lY3Quc2VcL3ZhbGlkYXRvciIsImlhdCI6MTYwMzQ1ODQyMSwianRpIjoiNGQx
Mzk2ZjFmZjcyOGY0MGQ1MjQwM2I2MWM1NzQ0ODYiLCJzaWdfdmFsX2NsYWltcyI6
eyJzaWciOlt7ImV4dCI6bnVsbCwic2lnX3ZhbCI6W3sibXNnIjoiT0siLCJleHQi
Om51bGwsInJlcyI6IlBBU1NFRCIsInBvbCI6Imh0dHA6XC9cL2lkLnN3ZWRlbmNv
bm5lY3Quc2VcL3N2dFwvc2lndmFsLXBvbGljeVwvdHMtcGtpeFwvMDEifV0sInNp
Z19yZWYiOnsic2lnX2hhc2giOiJ5Y2VQVkxJemRjcEs5N0lZT2hGSWYxbnk3OUht
SUNiU1Z6SWVaTmJpem83ckdJd0hOTjB6WElTeUtHakN2bm9uT2FRR2ZMXC9QM3ZE
dEI4OHlLU1dlWGc9PSIsImlkIjoiaWQtNzM5ODljNmZjMDYzNjM2YWI1ZTc1M2Yx
MGY3NTc0NjciLCJzYl9oYXNoIjoiQm9QVjRXQ0E5c0FJYWhqSzFIYWpmRnhpK0F6
QzRKR1R1ZjM5VzNaV2pjekRDVVJ4ZGM5WWV0ZUh0Y3hHVmVnZ3B4SEo3NVwvY1E3
SE4xZERkbGl5SXdnPT0ifSwic2lnbmVyX2NlcnRfcmVmIjp7InJlZiI6WyIxK2Fh
SmV0ZzdyZWxFUmxVRFlFaVU0WklaaFQ0UlV2aUlRWnVLN28xR0ZLYVRQUTZ5K2t4
XC9QTnREcnB1cVE2WGZya0g5d1lESzRleTB5NFdyTkVybnc9PSIsImg0UER4YjVa
S214MWVUU3F2VnZZRzhnMzNzMDVKendCK05nRUhGVTRnYzl0cUcwa2dIa2Y2VzNv
THprVHd3dXJJaDZZOUFhZlpZcWMyelAycEUycDRRPT0iLCJEZDJDNXNCMElPUWVN
Vm5FQmtNNVE5Vzk2bUJITnd3YTJ0elhNcytMd3VZY09VdlBrcnlHUjBhUEc4Tzlu
SVAzbGJ3NktqUTFoRG1SazZ6Qzh4MmpkZz09Il0sInR5cGUiOiJjaGFpbl9oYXNo
In0sInNpZ19kYXRhX3JlZiI6W3sicmVmIjoiIiwiaGFzaCI6IkZjR3BPT2Y4aWxj
UHQyMUdEZDJjR25MR0R4UlM1ajdzdk00YXBwMkg0MWRERUxtMkN6Y2VUWTAybmRl
SmZXamludG1RMzc2SWxYVE9BcjMxeXpZenNnPT0ifSx7InJlZiI6IiN4YWRlcy0x
MWExNTVkOTJiZjU1Nzc0NjEzYmI3YjY2MTQ3N2NmZCIsImhhc2giOiJLUmtnYlo2
UFwvbmhVNjNJTWswR2lVZlVcL0RUd3ZlWWl0ZVFrd0dlSnFDNUJ6VE5WOGJRYnBl
ZFRUdVdKUHhxdkowUlk4NGh3bTdlWVwvZzBIckFPZWdLdz09In1dLCJ0aW1lX3Zh
bCI6W119XSwiZXh0IjpudWxsLCJ2ZXIiOiIxLjAiLCJwcm9maWxlIjoiWE1MIiwi
aGFzaF9hbGdvIjoiaHR0cDpcL1wvd3d3LnczLm9yZ1wvMjAwMVwvMDRcL3htbGVu
YyNzaGE1MTIifX0.TdHCoIUSZj2zMINKg7E44-8VE_mJq6TG1OoPwnYSs_hyUbuX
mrLJpuk8GR5YrndeOucPUYAwPxHt_f68JIQyFTi0agO9VJjn1R7Pj3Jt6WG9pYVN
n5LH-D1maxD11ZxxbcYeHbsstd2Sy2uMa3BdpsstGdPymSmc6GxY5uJoL0-5vwo_
3l-4Bb3LCTiuxYPcmztKIbDy2hEgJ3Hx1K4HF0SHgn3InpqBev3hm2SLw3hH5BCM
rywBAhHYE6OGE0aOJ6ktA5UP0jIIHfaw9i1wIiJtHTaGuvtyWSLk5cshmun9Hkdk
kRTA75bzuq0Iyd0qh070rA8Gje-s4Tw4xzttgKx1KSkvy8n5FqvzWdsZvclCG2mY
Y9rMxh_7607NXcxajAP4yDOoKNs5nm937ULe0vCN8a7WTrFuiaGjry7HhzRM4C5A
qxbDOBXPLyoMr4qn4LRJCHxOeLZ6o3ugvDOOWsyjk3eliyBwDu8qJH7UmyicLxDc
Cr0hUK_kvREqjD2Z
]]></artwork></figure>

<t>Decoded JWT Header:</t>

<figure><artwork><![CDATA[
{
  "kid":"OenI+434JhbvfDntfV\/8rOxG7FkvyjaKVJaVqIFBXohVhAe5fK8anov
         1S688r7Kbal+fvpaH1j8ibg52QBy1PQ==",
  "typ":"JWT",
  "alg":"RS512"
}
]]></artwork></figure>

<t>Decoded JWT Claims:</t>

<figure><artwork><![CDATA[
{
  "aud" : "http://example.com/audience1",
  "iss" : "https://swedenconnect.se/validator",
  "iat" : 1603458421,
  "jti" : "4d1396f1ff728f40d52403b61c574486",
  "sig_val_claims" : {
    "sig" : [ {
      "ext" : null,
      "sig_val" : [ {
        "msg" : "OK",
        "ext" : null,
        "res" : "PASSED",
        "pol" : "http://id.swedenconnect.se/svt/sigval-policy/
                 ts-pkix/01"
      } ],
      "sig_ref" : {
        "sig_hash" : "ycePVLIzdcpK97IYOhFIf1ny79HmICbSVzIeZNbizo7rGIw
                      HNN0zXISyKGjCvnonOaQGfL/P3vDtB88yKSWeXg==",
        "id" : "id-73989c6fc063636ab5e753f10f757467",
        "sb_hash" : "BoPV4WCA9sAIahjK1HajfFxi+AzC4JGTuf39W3ZWjczDCURx
                     dc9YeteHtcxGVeggpxHJ75/cQ7HN1dDdliyIwg=="
      },
      "signer_cert_ref" : {
        "ref" : [ "1+aaJetg7relERlUDYEiU4ZIZhT4RUviIQZuK7o1GFKaTPQ6y+
                   kx/PNtDrpuqQ6XfrkH9wYDK4ey0y4WrNErnw==",
                  "h4PDxb5ZKmx1eTSqvVvYG8g33s05JzwB+NgEHFU4gc9tqG0kgH
                   kf6W3oLzkTwwurIh6Y9AafZYqc2zP2pE2p4Q==",
                  "Dd2C5sB0IOQeMVnEBkM5Q9W96mBHNwwa2tzXMs+LwuYcOUvPkr
                   yGR0aPG8O9nIP3lbw6KjQ1hDmRk6zC8x2jdg==" ],
        "type" : "chain_hash"
      },
      "sig_data_ref" : [ {
        "ref" : "",
        "hash" : "FcGpOOf8ilcPt21GDd2cGnLGDxRS5j7svM4app2H41dDELm2Czc
                  eTY02ndeJfWjintmQ376IlXTOAr31yzYzsg=="
      }, {
        "ref" : "#xades-11a155d92bf55774613bb7b661477cfd",
        "hash" : "KRkgbZ6P/nhU63IMk0GiUfU/DTwveYiteQkwGeJqC5BzTNV8bQb
                  pedTTuWJPxqvJ0RY84hwm7eY/g0HrAOegKw=="
      } ],
      "time_val" : [ ]
    } ],
    "ext" : null,
    "ver" : "1.0",
    "profile" : "XML",
    "hash_algo" : "http://www.w3.org/2001/04/xmlenc#sha512"
  }
}
]]></artwork></figure>

</section>


  </back>

<!-- ##markdown-source:
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
waNorv17fHj8TbhvujT6qv18dR3eTZgB7uLfjobv+i2J4RPIOKOk09XbM5K4
W+8L+8j6huWnX0IO+/947s16pe+/SPwvrRTFH+I/YyhAKhyiHtzF9J3WPyha
Z9ioHVVl/fxwVxu3F+XaLGUd7h6qZu1p2hsea9qkNdWP9p1Tqe3OIaB/qq2W
dHyt9Q7PleXT1rKttvxSmTW+dDLbovd4f3947o201zkXPA6HzoRHV2/uMg/3
D0p+pkj5DPwrT3PaXS4zS0mzO2Bo/i46infr09BHuzPMjp4KD26hJi+Wz6mq
vJyV9/pvheNTtl7pb2aZhxHEu0vlWHwadPfJ0KvKw1jztKqn7CtDbT5f76v1
u9wX5eWu2kqpRRX0u7ZD2H0KR+kbLTmc0Jnf+UO8Sv0my3XNm985mlHqGoPi
uKQPspPaZNHPdgdbvfYy2Tzf2alK+Vnud17yh9+SIF3tv3RaXtFZb95e8q8z
Z1V92I2Lz1ntIB2yI6dVcqxdjMLhP1eLbKe4n+Ymz+Y+pfV7b9vhdly5n2cy
rpSrH3ePv7XmpWp5kJ0rD95bRVrNq4kQzCCcsRvHVX+32zi1RX78UJBnk/Gb
kj520utSep19uQRBUU0/5dxHqdZ+0ZpDq/S4auZeHkYPefOx2tpBOOgdX5vu
b43dZqy0B9vOykmC4FDpSnKnct9+sGqdjDHd5Z+XL6lF0eyu8sen+316qSKn
Qh1gZk4jcQl37hNZGRSvzlSe37uKymEghGWlsm63Z/e6oXS8dKoCiCoVq1Ep
7sGULu/cbTMrr9fpahZkqdQw009HJQEzrT+W0uDt67PRUrc88yVzBwnda79d
cDKpw3F8dGMSmATdL3gmlHuTSsmpXE59SE9nudwdqE8qM53eTfP5VPbuTpmp
iUg8d1fz6STf+WItBvlMrbmSKvpgNvhS7O+22lj3tJfVrqLV355yj8d+a3g/
fZkmILHW1H5/M6p39m/butQd32cXO/NOG3+ZS1Wn0Nbmz7sIEhFD5ffTMsr/
U4g9P7etV1s8jekrOySB3+JVfbr92mz4t4NNvai13e12t7vMre3Mv6QlKfVF
yn7ZmwYY31/chUzuD5bnLvD/ARNSdoNvfAAA

-->

</rfc>

